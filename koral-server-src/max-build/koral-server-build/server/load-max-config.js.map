{"version":3,"names":["fs","path","YAML","loadYAMLConfig","ENV","dirname","env","app","envConfigFilepath","join","parse","readFileSync","err","console","error","process","exit","appConfigFilepath","loadMaxConfig","config","PORT","port","parseInt","SERVER_ADDRESS","serverAddress","USE_HTTPS","useHttps"],"sources":["../../src/server/load-max-config.js"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport YAML from 'yaml';\n\n// special config loader when running within Max\nfunction loadYAMLConfig(ENV, dirname) {\n  let env;\n  let app;\n\n  const envConfigFilepath = path.join(dirname, `env-${ENV}.yaml`);\n\n  try {\n    env = YAML.parse(fs.readFileSync(envConfigFilepath, 'utf-8'));\n  } catch(err) {\n    console.error(`Invalid env config file: ${envConfigFilepath}`);\n    process.exit(1);\n  }\n\n  const appConfigFilepath = path.join(dirname, 'application.yaml');\n\n  try {\n    app = YAML.parse(fs.readFileSync(appConfigFilepath, 'utf-8'));\n  } catch(err) {\n    console.error(`Invalid app config file: ${appConfigFilepath}`);\n    process.exit(1);\n  }\n\n  return { env, app };\n}\n\n/**\n * Load configuration from files located in `/config` directory\n *\n * @param {String} [ENV='default'] - Name of the environment corresponding to the\n *  `config/env-${name}.{yaml|json}` file.\n * @param {String} [callerURL=null] - Module url of the calling file, used to\n *  automatically retrieve the `role` of node clients.\n * @return {ClientConfig|ServerConfig}\n */\nexport default function loadMaxConfig(ENV = 'default', dirname) {\n  let config = loadYAMLConfig(ENV, dirname);\n\n  // override from given env variables\n  if (process.env.PORT) {\n    config.env.port = parseInt(process.env.PORT);\n  }\n\n  if (process.env.SERVER_ADDRESS) {\n    config.env.serverAddress = process.env.SERVER_ADDRESS;\n  }\n\n  if (process.env.USE_HTTPS) {\n    config.env.useHttps = !!process.env.USE_HTTPS;\n  }\n\n  return config;\n}\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,SAAS;AACxB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA,SAASC,cAAcA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACpC,IAAIC,GAAG;EACP,IAAIC,GAAG;EAEP,MAAMC,iBAAiB,GAAGP,IAAI,CAACQ,IAAI,CAACJ,OAAO,EAAE,OAAOD,GAAG,OAAO,CAAC;EAE/D,IAAI;IACFE,GAAG,GAAGJ,IAAI,CAACQ,KAAK,CAACV,EAAE,CAACW,YAAY,CAACH,iBAAiB,EAAE,OAAO,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAMI,GAAG,EAAE;IACXC,OAAO,CAACC,KAAK,CAAC,4BAA4BN,iBAAiB,EAAE,CAAC;IAC9DO,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACjB;EAEA,MAAMC,iBAAiB,GAAGhB,IAAI,CAACQ,IAAI,CAACJ,OAAO,EAAE,kBAAkB,CAAC;EAEhE,IAAI;IACFE,GAAG,GAAGL,IAAI,CAACQ,KAAK,CAACV,EAAE,CAACW,YAAY,CAACM,iBAAiB,EAAE,OAAO,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAML,GAAG,EAAE;IACXC,OAAO,CAACC,KAAK,CAAC,4BAA4BG,iBAAiB,EAAE,CAAC;IAC9DF,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACjB;EAEA,OAAO;IAAEV,GAAG;IAAEC;EAAI,CAAC;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASW,aAAaA,CAACd,GAAG,GAAG,SAAS,EAAEC,OAAO,EAAE;EAC9D,IAAIc,MAAM,GAAGhB,cAAc,CAACC,GAAG,EAAEC,OAAO,CAAC;;EAEzC;EACA,IAAIU,OAAO,CAACT,GAAG,CAACc,IAAI,EAAE;IACpBD,MAAM,CAACb,GAAG,CAACe,IAAI,GAAGC,QAAQ,CAACP,OAAO,CAACT,GAAG,CAACc,IAAI,CAAC;EAC9C;EAEA,IAAIL,OAAO,CAACT,GAAG,CAACiB,cAAc,EAAE;IAC9BJ,MAAM,CAACb,GAAG,CAACkB,aAAa,GAAGT,OAAO,CAACT,GAAG,CAACiB,cAAc;EACvD;EAEA,IAAIR,OAAO,CAACT,GAAG,CAACmB,SAAS,EAAE;IACzBN,MAAM,CAACb,GAAG,CAACoB,QAAQ,GAAG,CAAC,CAACX,OAAO,CAACT,GAAG,CAACmB,SAAS;EAC/C;EAEA,OAAON,MAAM;AACf","ignoreList":[]}
